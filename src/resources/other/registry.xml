<article xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:svg="http://www.w3.org/2000/svg"
      xmlns:m="http://www.w3.org/1998/Math/MathML"
      xmlns:html="http://www.w3.org/1999/xhtml"
      version="5.0">
    <title>OpenStack Extension Registry Proposal</title>
    <info>
        <author>
            <personname>
                <firstname>Jorge</firstname>
                <surname>Williams</surname>
            </personname>
            <affiliation>
                <orgname>Rackspace Cloud</orgname>
            </affiliation>
        </author>
        <copyright>
            <year>2011</year>
            <holder>Rackspace US, Inc.</holder>
        </copyright>
    </info>
    <section>
        <title>Overview</title>
        <para>
            The extension registry should be modeled after the OpenGL
            extensions registry:<link
            xlink:href="http://www.opengl.org/registry/">
            http://www.opengl.org/registry/ </link>.  The OpenStack
            extension registry serves the following purposes:
        </para>
        <orderedlist spacing="compact">
            <listitem>
                <para>
                    It provides a central repository for all OpenStack
                    extensions organized by <abbrev>API</abbrev>.
                </para>
            </listitem>
            <listitem>
                <para>
                    It allows vendors to register vendor prefixes: (RAX,
                    HP, etc.).
                </para>
            </listitem>
        </orderedlist>
        <para>
            Note that this proposal is for a repository of extension
            specifications and <emphasis role="strong">not</emphasis>
            a repository of extension software or plugins for a
            particular OpenStack implementation.  That is, the
            repository is implementation agnostic and may describe
            extensions supported by implementations other than the
            OpenStack reference implementations (Nova, Glance, Swift,
            Keystone).
        </para>
    </section>
    <section>
        <title>Benefits of a centralized repository</title>
        <para>
            Users of OpenStack APIs benefit from having a centralized
            extension repository.  While we would like to encourage
            vendors to develop extensions in coordination with the
            OpenStack community, some vendors may opt to develop their
            extensions independently. Without a centralized extension
            repository, users would have to gather information from
            various vendor websites in order to burst from one cloud
            onto another.  Adding to the confusion is the fact that
            vendor
            <inlineequation><mathphrase>X</mathphrase></inlineequation>
            may choose to provide support for an extension developed
            by vendor
            <inlineequation><mathphrase>Y</mathphrase></inlineequation>.
            It may, therefore, not be clear to users where to go to
            get information about an extension.
        </para>
        <para>
            Extension authors also benefit from having a central
            repository. The repository can be used to determine
            whether an existing extension satisfies an author's
            requirements. This can help mitigate the problem of
            extension proliferation and it may provide an opportunity
            for authors of similar extensions to combine their
            efforts.  Additionally, the repository may provide a means
            by which users can become aware of extensions not
            currently supported by their vendors, thus allowing them
            to lobby for such support.
        </para>
    </section>
    <section>
        <title>Extension Registration</title>
        <para>
            The extension registration process closely follows the
            registration process developed by the Khronos group for
            OpenGL:
            <link
            xlink:href="http://www.opengl.org/registry/doc/rules.html">
            http://www.opengl.org/registry/doc/rules.html</link>.
            When creating an extension the following steps should be
            followed:
        </para>
        <orderedlist spacing="compact">
            <listitem>
                <formalpara>
                    <title>Determine if an existing extension can be used</title>
                    <para>
                        Reuse of an existing extension is encouraged
                        as this helps prevent the unnecessary
                        proliferation of extensions and provides a
                        means by which popular extension can be
                        promoted to the core.  Additionally, it's
                        possible that existing extensions have
                        established client support.
                    </para>
                </formalpara>
                <para>
                    If an extension with similar functionality exists,
                    but does not entirely meet the authors needs, then
                    authors are encouraged to collaborate on promoting
                    the extension into a multi-vendor extension.
                </para>
                <para>
                    Finally, an extension may be under development but
                    has not yet been released. Thus, authors are also
                    encouraged to send an email to the OpenStack
                    mailing list to see if anyone else is working on
                    an extension with similar functionality.
                </para>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Determine if a multi-vendor or OpenStack
                    extension is appropriate</title>
                    <para>
                        If a suitable extension does not exist, an
                        author should work with other vendors to
                        determine if a muliti-vendor extension is
                        appropriate.  As with single vendor extensions,
                        multi-vendor extensions may be implemented by
                        interested parties among themselves without
                        coordination with the OpenStack community.
                        That said, Multi-vendor extensions are
                        preferred over single vendor extension during
                        the promotion processes.
                    </para>
                </formalpara>
                <para>
                    If the extension provides useful functionality
                    that is applicable to a wide variety of general
                    circumstances, the author should consider
                    developing the extension as an OpenStack
                    extension. OpenStack extensions are the most
                    "blessed" category of extensions.  If they are
                    generally applicable, these extensions are on the
                    fast track to becoming core API
                    features. Reference implementations will always
                    offer support for these extensions and alternate
                    implementations are also encouraged to support
                    them.  OpenStack extensions should be implemented
                    in coordination with the OpenStack community and
                    by working closely with the PTL of the service
                    being extended. OpenStack extensions go through a
                    standardization process to ensure that they
                    integrate well with the core API.
                </para>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Register a vendor prefix, if one has not
                    already been assigned</title>
                    <para>
                        If a single vendor extension is appropriate an
                        author should register a vendor prefix with
                        the extension registry. The vendor prefix is a
                        short string that is used to prevent clashes
                        between extensions.  The following are
                        examples of vendor prefixes:
                    </para>
                </formalpara>
                <informaltable rules='all'>
                    <thead>
                        <tr>
                            <td align="center" colspan="1">Prefix</td>
                            <td align="center" colspan="3">Vendor</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td colspan="1">RAX</td>
                            <td colspan="3">Rackspace</td>
                        </tr>
                        <tr>
                            <td colspan="1">HP</td>
                            <td colspan="3">Hewlett-Packard</td>
                        </tr>
                        <tr>
                            <td colspan="1">CTX</td>
                            <td colspan="3">Citrix</td>
                        </tr>
                    </tbody>
                </informaltable>
                <para>
                    Extension aliases are always prefixed with these
                    vendor identifiers.  For example,
                    <code>RAX-BAK</code> is the extension alias for
                    Rackspace's OpenStack Compute Backup Schedule
                    Extension. These aliases are used to prevent
                    clashes in HTTP parameters, headers, and JSON
                    representations.  An example backup schedule
                    request is illustrated below.
                </para>
                <example>
                    <title>RAX-BAK JSON Representation</title>
                    <programlisting language="javascript"><xi:include
                    href="samples/backup.json"
                    parse="text"/></programlisting>
                </example>
                <para>
                    Any vendor or individual may register a vendor
                    prefix by simply sending an email to <link
                    xlink:href="mailto:extensions@openstack.com">extensions@openstack.com</link>. There
                    is no formal approval process for prefixes other
                    that new prefixes are not allowed to clash with
                    existing ones.
                </para>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Develop and write the extension specification</title>
                    <para>
                        Authors should start with a template for
                        writing extension specifications. Templates
                        exist in DocBook and reStructuredText formats.
                        These templates should be available in the
                        extension registry.
                    </para>
                </formalpara>
                <para>
                    Extensions must be written against a specific
                    version of a core OpenStack API.  If possible, it
                    is highly preferable to write extensions against
                    the most recent stable version of the
                    API. "Written against" means that new language
                    must be written as well-defined modifications to
                    the core API being referenced. It is important for
                    authors to document how the core API is affected
                    by the introduction of the extension. For example:
                    Will the extension introduce new states in the
                    compute state machine?  Should a new action be
                    introduced to bring a server to an
                    <code>ACTIVE</code> state?  It should be possible
                    for someone not involved with the development of
                    an extension to sit down with a copy of the core
                    API specification and the extension specification
                    and produce a merged document that clearly
                    specifies how the extended API should function.
                </para>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Freeze the specification and submit it to
                    the registry</title>
                    <para>
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Make the registry the source of truth for
                    the specification</title>
                    <para>
                    </para>
                </formalpara>
            </listitem>
        </orderedlist>
    </section>
</article>
